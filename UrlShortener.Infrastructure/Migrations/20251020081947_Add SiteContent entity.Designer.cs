// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UrlShortener.Infrastructure;

#nullable disable

namespace UrlShortener.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251020081947_Add SiteContent entity")]
    partial class AddSiteContententity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UrlShortener.Infrastructure.DAOs.RoleDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3be5c12b-adb4-49f1-a10d-bdf648bcb40c"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("c10079db-6a58-41d4-b1fc-b6ce4c7d860f"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("UrlShortener.Infrastructure.DAOs.SiteContentDAO", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Key");

                    b.ToTable("SiteContents", (string)null);
                });

            modelBuilder.Entity("UrlShortener.Infrastructure.DAOs.UrlDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OriginalUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OriginalUrl");

                    b.HasIndex("ShortCode")
                        .IsUnique();

                    b.ToTable("Urls", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("814298ac-bc7e-41d4-98b7-0e21db0ae10a"),
                            CreatedById = new Guid("1bf365a0-3e82-4de8-bea3-f644a541ebc0"),
                            CreatedDate = new DateTime(2025, 10, 19, 20, 50, 31, 486, DateTimeKind.Utc).AddTicks(4440),
                            OriginalUrl = "https://localhost:7111/Login",
                            ShortCode = "aDGV9IW"
                        },
                        new
                        {
                            Id = new Guid("9aa94be8-cbd6-49ba-831f-061131678d81"),
                            CreatedById = new Guid("7d5f1e2c-8f4c-4c3a-9d6a-2e8f4b5c9a1b"),
                            CreatedDate = new DateTime(2025, 10, 19, 20, 50, 31, 486, DateTimeKind.Utc).AddTicks(4440),
                            OriginalUrl = "http://localhost:5173/user-created",
                            ShortCode = "RZO1LGP"
                        },
                        new
                        {
                            Id = new Guid("fdbf0efa-3a81-46ad-a1fd-827ed6183ac2"),
                            CreatedById = new Guid("1bf365a0-3e82-4de8-bea3-f644a541ebc0"),
                            CreatedDate = new DateTime(2025, 10, 19, 20, 50, 31, 486, DateTimeKind.Utc).AddTicks(4440),
                            OriginalUrl = "http://localhost:5173/admin-created",
                            ShortCode = "37f2Fmo"
                        });
                });

            modelBuilder.Entity("UrlShortener.Infrastructure.DAOs.UserDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("NormalizedUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedUsername")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1bf365a0-3e82-4de8-bea3-f644a541ebc0"),
                            NormalizedUsername = "ADMIN",
                            PasswordHash = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("7d5f1e2c-8f4c-4c3a-9d6a-2e8f4b5c9a1b"),
                            NormalizedUsername = "USER",
                            PasswordHash = "user",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.Property<Guid>("RolesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uuid");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            RolesId = new Guid("3be5c12b-adb4-49f1-a10d-bdf648bcb40c"),
                            UsersId = new Guid("1bf365a0-3e82-4de8-bea3-f644a541ebc0")
                        },
                        new
                        {
                            RolesId = new Guid("c10079db-6a58-41d4-b1fc-b6ce4c7d860f"),
                            UsersId = new Guid("7d5f1e2c-8f4c-4c3a-9d6a-2e8f4b5c9a1b")
                        });
                });

            modelBuilder.Entity("UrlShortener.Infrastructure.DAOs.UrlDAO", b =>
                {
                    b.HasOne("UrlShortener.Infrastructure.DAOs.UserDAO", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.HasOne("UrlShortener.Infrastructure.DAOs.RoleDAO", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UrlShortener.Infrastructure.DAOs.UserDAO", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
